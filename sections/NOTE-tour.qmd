---
format: html
---

::: {.callout-note collapse=true}
## Take a quick tour of your website files

When you create a new Quarto website, a handful of files are generated by default:

1. **`index.qmd` renders your website's landing page.** Whatever you add to this file will be the first content visitors see when they visit your site. Update the content of `index.qmd` (or any other website page) using [markdown](https://quarto.org/docs/authoring/markdown-basics.html) and / or HTML (you can mix and match both on the same page), add and execute code chunks and embed outputs, etc. ***Importantly,** do not change the name of `index.qmd` -- this is the default / expected name given to website landing / home pages. If you change the name of this file, you risk breaking your (eventual) deployment.*

2. **`about.qmd` is a regular 'ole website page.** You're able to change both the name of this file (e.g. change `about.qmd` to `my-new-name.qmd`) and / or the title of the file by updating its YAML -- by default, the YAML only includes a title:

```{r filename="about.qmd"}
#| eval: false
#| echo: true
---
title: "About"
---
```

- [YAML](https://en.wikipedia.org/wiki/YAML) is a human-readable data serialization language, which is commonly used for creating configuration files. Quarto recognizes *lots* of different [YAML options](https://quarto.org/docs/reference/formats/html.html) for controlling the appearance and behavior of your individual website pages. YAML is always written at the top of a `.qmd` file and is denoted by a pair of "gates", `---`. 

3. **`_quarto.yml` is your website configuration file.** Any document rendered within your project directory will automatically inherit the metadata defined in this project-level configuration file (though you can control metadata on a page-by-page basis by making edits to an individual page's YAML, which will override any options specified in `_quarto.yml`). Importantly, this is where you define your website's structure (e.g. your navbar, sidebar, footer, etc.). By default, your file should look similar to this: 

```{r filename="_quarto.yml"}
#| eval: false
#| echo: true
project: 
  type: website

website:
  title: "mysite"
  navbar:
    left:
      - href: index.qmd
        text: Home
      - about.qmd

format:
  html:
    theme: cosmo
    css: styles.css
    toc: true
```

4. **`styles.css` is a stylesheet, where you can write CSS rules to alter the appearance of your website.** We'll actually create and use a different type of stylesheet (called a "sassy css file", `.scss`) in the next workshop, [Customizing Quarto Websites](https://ucsb-meds.github.io/customizing-quarto-websites/#/title-slide).

5. **[`.gitignore`](https://git-scm.com/docs/gitignore#:~:text=A%20gitignore%20file%20specifies%20intentionally,gitignore%20file%20specifies%20a%20pattern.) is a place where we can specify any files that we don't want Git to track (i.e. that we want Git to ignore).** This is not a "Quarto thing," but rather a valuable file that lives inside `git` directories. One common use is to add any large data files that you don't want to accidentally push to GitHub (GitHub isn't designed to handle LARGE files).

6. **The `_site/` directory is where all of your rendered HTML (and other important) files live.** When you render or preview your site (we'll do this in the next step!), Quarto takes all of your `.qmd` files and converts them to `.html` files, and saves them to this folder (which is important because web browsers don't know how to read `.qmd` files, but *do* know how to read `.html` files). We're actually going to change the name of this folder once we configure our website for deployment, but `_site` is the default name that Quarto uses (we can leave as-is, for now). You don't want to physically edit or move any files inside this directory (if you want to make a change to your website, update the `.qmd` or `_quarto.yml` file, then re-render).

:::