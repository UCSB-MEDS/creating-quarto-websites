---
format: 
  html:
    theme: meds-website-styles.scss
    mainfont: Nunito
    toc: true
    toc-location: left
    toc-depth: 2
    smooth-scroll: true
---

## {{< fa edit title="Pencil and paper" >}} Where you should start changing stuff {#change-stuff}

Right now, our website is built using Quarto's default styling. Let's learn about where things live and how to start customizing some stuff.

::: {.callout-note collapse="true"}
## You can decide which code editor you prefer to use from here on out!

Both RStudio and Positron will make updating your website a productive and fun experience. You choose!
:::

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Don't mess with stuff in `docs/`** 

When you render your site, Quarto takes all your `.qmd` files, converts them to `.html` files (along with some other important stuff), and saves everything to your `docs/` folder. Your site now deploys from this folder, so you really don't want to mess with anything in here directly.

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Add content to your landing page (`index.qmd`)**

::: {.callout-important}
## Do *not* change the name of `index.qmd`
This is the default / expected name given to website landing / home pages. If you change the name of this file, you risk breaking your deployment.
:::

`index.html` (which is built from `index.qmd`) is the page people will arrive at when navigating to your website -- give this landing / home page a makeover by trying out some of the following:

  -   Update the YAML `title` in your `index.qmd` file. Here, I changed mine from `"mysite"` to my name, `"Samantha Csik"`

  -   Delete the sample text and begin adding your own content -- a great place to start is a short blurb introducing yourself!

```{r}
#| echo: false
#| fig-align: center
#| fig-cap: "My Quarto website home page, which now includes my name and some content, but isn't super visually pleasing..."
knitr::include_graphics("media/no-about-page.png")
```

::: {.callout-tip collapse="true"}
## Remember to spin up a preview so that you can see your changes in real time!

Run `quarto preview` in your Terminal (this works regardless of which IDE you're using), which will open your preview in a browser window. Make changes, save them, and watch your preview update!
:::

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Arrange your landing page (`index.qmd`) using a [pre-built template](https://quarto.org/docs/websites/website-about.html){target="_blank"}**

When the `about` option is added to a document's YAML, a special template will be used to layout the content of that page. Choose from one of Quarto's five [built-in templates](https://quarto.org/docs/websites/website-about.html#templates){target="_blank"}, each with a slightly different layout style. Some YAML options to play around with:

  -   `template`: choose from Quarto's built-in template options

  -   `image` (*note that this is a document-level option* i.e. is not a sub-item of `about`): supply it the file path to your photo

  -   `image-width` & `image-shape`: adjust your image's size and shape (`round`, `rounded`, `rectangle`)

  -   `links`: add buttons with links to your social media pages

```{r filename="index.qmd"}
#| eval: false
---
title: "Samantha Csik"
image: media/headshot.jpeg # <1>
toc: false # <2>
about: 
  template: jolla # <3>
  image-shape: round # <4>
  image-width: 17em # <4>
  links: # <5>
    - text: LinkedIn # <5>
      href: https://www.linkedin.com/in/samanthacsik/ # <5>
    - text: GitHub # <5>
      href: https://github.com/samanthacsik # <5>
    - text: Email # <5>
      href: mailto:scsik@ucsb.edu # <5>
---
        
# page content excluded for brevity ~
```
1. add a photo by supplying a relative file path & image name (here, `headshot.jpeg` lives in a folder called `media/`)
2. if you have a template / content with header text, you can remove "On this page" menu by setting `toc: false`
3. use a [pre-built template](https://quarto.org/docs/websites/website-about.html#templates){target="_blank"} (here, `jolla`) to update the layout of your landing page (or any page!)
4. set image shape (`round`, `rounded`, `rectangle`) & size
5. add button links to your favorite social media pages (e.g. LinkedIn, GitHub, and even your email -- Note the `mailto::` that must precede of your email address, `mailto::youremail.com`)

::: column-margin
**Fun Tip:** Install the [Font Awesome Extension for Quarto](https://github.com/quarto-ext/fontawesome){target="_blank"} to add free [Font Awesome](https://fontawesome.com/){target="_blank"} `r fontawesome::fa("font-awesome", fill = "#5A5A5A", a11y = "sem")` icons to your site! Be sure to check out the [`icon` option](https://quarto.org/docs/websites/website-about.html#links){target="_blank"} when adding linked buttons to your About Page.
:::

```{r}
#| echo: false
#| fig-align: center
#| fig-cap: "My Quarto website after updating my landing page with the built-in `jolla` template, adding an image, and linked buttons. Overall, a big improvement! However, our text is a bit squished in the center of the page -- we'll fix then in the next step."
knitr::include_graphics("media/with-about-page.png")
```

::: {.callout-note collapse=true}
## Quarto supports creating completely custom page layouts -- but I recommend sticking with a template as you're getting started

Quarto's built-in [templates](https://quarto.org/docs/websites/website-about.html#templates){target="_blank"} are great for a couple reasons, primarily:

1. they provide a quick and easy way to create visually-pleasing web pages (particularly website landing pages)
2. they take care of a lot of the finicky "under-the-hood" styling (e.g. creating "responsive" page elements i.e. automatically rearranging content to fit changing viewport sizes) that would otherwise require a fair bit of [CSS](https://www.w3schools.com/css/){target="_blank"} knowledge

As you get more comfortable with the Quarto framework and CSS for styling web pages (we'll learn more about this in a later workshop!), you may decide to build a completely custom web page layout. The following Quarto websites leverage custom layouts to arrange contents on individual web pages:

- [Openscapes](https://openscapes.org/){target="_blank"} ([{{< fa brands github >}} source code](https://github.com/Openscapes/website-new){target="_blank"})
- [EDS 240: Data Visualization & Communication](https://eds-240-data-viz.github.io/){target="_blank"} ([{{< fa brands github >}} source code](https://github.com/EDS-240-Data-Viz/EDS-240-Data-Viz.github.io){target="_blank"})

I briefly touch on using [Bootstrap CSS Grid](https://quarto.org/docs/output-formats/page-layout.html#css-grid){target="_blank"} to build these responsive custom web page layouts in this [blog post](https://samanthacsik.github.io/posts/2023-08-01-openscapes-website/#greatest-victory-responsive-web-pages){target="_blank"}. Check out the [Quarto documentation](https://quarto.org/docs/output-formats/page-layout.html){target="_blank"} to learn more. 
:::

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Modify website appearance in `_quarto.yml`** 

The `_quarto.yml` file is a configuration file -- any document rendered within the project directory will automatically inherit the metadata defined within this file. Some easy updates that make a big difference:

```{.yaml filename="_quarto.yml"}
project:
  type: website
  output-dir: docs

website:
  title: "Sam Csik" # <1>
  navbar:
    left:
      - href: index.qmd
        text: Home
      - about.qmd

format:
  html:
    theme: cosmo
    css: styles.css
    toc: true # <2>
    page-layout: full # <3>
```
1. Your website title, which appears in your browser tab and in the top left corner of your website's navbar (by default, it's set to your repository name, which isn't so pretty -- change this!)
<!-- 2. This navbar title is the text that appears in the top left corner of your website (by default, this inherits your **website** title; see #1) -- when clicked, a user will be brought back to the landing page. You can alternative add a logo here (more on that in the next workshop!) -->
<!-- **Note:** I removed my site-level `title` option and added it instead as a navbar `title`. Functionally, they appear the same way, but organizationally I think this makes more intuitive sense -- if I wanted to add a `logo` instead of a `title`, I'd similarly need to place that option beneath `navbar`. -->
2. Note that the default `toc: true` here (in `_quarto.yml`) renders a navigation menu on *all* web pages by default (but you can override options on a page-by-page basis)
3. Set your `page-layout` to `full` so that your page content takes up more of the page width

```{r}
#| echo: false
#| fig-align: center
#| fig-cap: "My website with a new title (see top left corner) and with `page-layout` set to `full`, so that content doesn't appear as squished in the middle of the page."
knitr::include_graphics("media/full-page.png")
```

::: {.callout-note collapse="true"}
## You aren't required to have a `title` on `index.qmd`
Going for a more minimalist look? You can comment out (or remove) the `title` option from `index.qmd`.
```{r}
#| echo: false
#| fig-align: center
#| fig-cap: ""
knitr::include_graphics("media/no-page-title.png")
```
:::

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Add additional pages to your website**

In the default Quarto website skeleton, there are two items in the navbar that appear as "Home" and "About" (**Note:** don't confuse the special-formatted "About Page" we created in `index.qmd` with the navbar page currently titled "About"). Those navbar tabs link to two `.html` files (`index.html` and `about.html`) and are automatically rendered when when you Build to `/docs`. Adding a new page to your website requires two steps:

  a. **Create a new `.qmd` file** and add any necessary YAML options, along with any content that you want to appear on that page. Here, I'm creating a new page titled "All of my favorite resources!" and saved it to my root directory as `resources.qmd`.
  
```{r filename="resources.qmd"}
#| eval: false
#| echo: true
---
title: "All my favorite resources!"
---
```

A quick reminder on how to add new files:

::: {.panel-tabset}
## **{{< fa brands r-project title="R programming language icon" >}} RStudio GUI buttons**

From RStudio's **File pane**, click **Blank File** > **Quarto Document** > give it a name (e.g. `resources.qmd` and save it to your project's root directory

## **{{< fa plus title="plus sign" >}} Positron GUI buttons**

From Posit's **Explorer** menu, click the **New File...** button and give it a name with the `.qmd` extension (e.g. `resources.qmd`). 

## **{{< fa terminal title="terminal symbol, |>" >}} Command line / Terminal**

Use the `touch` command to create any file type from your RStudio or Positron Terminal:

```{bash filename="Command line / Terminal"}
touch resources.qmd
```

:::

  b. **Update `_quarto.yml`** by adding your new `.qmd` to the list of navbar pages. My website's `_quarto.yml` file now looks like this:

```{.yaml filename="_quarto.yml"}
project:
  type: website
  output-dir: docs

website:
  title: "Sam Csik"
  navbar:
   left:
     - href: index.qmd
       text: Home
     - about.qmd
     - resources.qmd  # <1>

format:
  html:
    theme: cosmo
    css: styles.css
```
1. A newly-added navbar page. **Note:** The page name, as it appears in the navbar of your website, will be the same as whatever is listed in the `title` field of that file's YAML. For example, I have set `title: "All my favorite resources!"` in the YAML of `resources.qmd` -- this is how it will appear in my website's navbar. If you'd like to set the navbar name as something other than the page's title, use the `href` and `text` options together (e.g. see how `index.qmd` is rendered as `Home` in my website's navbar).

```{r}
#| echo: false
#| layout-ncol: 2
#| column: page
#| fig-subcap:
#|  - "A newly added navbar page, titled \"All of my favorite resources!\""
#|  - "A newly added navbar page, with an alternate navbar title (set using the `href` and `text` options together in `_quarto.yml`)"

knitr::include_graphics("media/resources-page.png")
knitr::include_graphics("media/resources-page-renamed.png")
```

### {{< fa arrow-right title="An arrow pointing to the right" >}} **Change the theme** 

Update the appearance of your site by choosing from one of the 25 predefined [Bootswatch themes](https://bootswatch.com/){target="_blank"}. By default, Quarto sites are built using the [cosmo](https://bootswatch.com/cosmo/){target="_blank"} theme. Supply just one theme name to the `theme` option in your `_quarto.qmd` file:

```{.yaml filename="_quarto.yml"}
# ~ additional metadata excluded for brevity ~

# supplying just one theme ("minty")
format:
  html:
    theme: minty
    css: styles.css
```

```{r}
#| echo: false
#| fig-align: center
#| fig-cap: "With theme, 'minty', a prebuilt [Bootswatch theme](https://bootswatch.com/)"
knitr::include_graphics("media/light.png")
```

*or* supply both a dark and a light theme for users to toggle between:

```{.yaml filename="_quarto.yml"}
# ~ additional metadata excluded for brevity ~

# supplying a light ("minty") and dark ("slate") theme to toggle between
format:
  html:
    theme: 
      light: minty
      dark: solar
    css: styles.css
```

```{r}
#| echo: false
#| fig-align: center
#| fig-cap: "With light / dark theme options applied; here, the `dark` theme, which is set to the prebuilt [Bootswatch theme](https://bootswatch.com/) theme, `slate`, is toggled on."
knitr::include_graphics("media/dark.png")
```

::: callout-important
## One last reminder to "Render Website" before pushing changes that you want to deploy!

If you've made and pushed changes to your website, but you're not seeing your website actually update, you may have forgotten to **Render Website**! Try doing so, then commit / push your files again. 
:::
